{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\api_wrapper\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"./components/UserPage\";\nimport { getUser } from \"./api/UserAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadUser(props) {\n  const dataLoaded = props.dataLoaded;\n  const userId = props.userId;\n  const userData = props.userData;\n  console.log(\"[APP] [LU] USER DATA: \" + props.userData);\n  if (props.userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserPage\",\n      children: dataLoaded && /*#__PURE__*/_jsxDEV(UserPage, {\n        userData: userData,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  } else if (userData === 404) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserPage\",\n      children: [\"User \", userId, \" not found...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserPage\",\n      children: \"User ID not present in URL...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = LoadUser;\nfunction App() {\n  _s();\n  // Hook used to access path paramaters\n  const urlParams = useParams();\n  const userId = urlParams.userId;\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [userData, setUserData] = useState([]);\n  // Debug / Logging\n  console.log(\"URL PARAMS: \" + JSON.stringify(urlParams));\n  console.log(\"USER ID: \" + userId);\n\n  // Retrieve user information from API on component load\n  useEffect(() => {\n    console.log(\"[APP] LOADING USER DATA: \" + dataLoaded);\n    getUser(userId).then(response => {\n      setUserData(response);\n      setDataLoaded(true);\n      console.log(\"USER DATA: \" + JSON.stringify(response));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Full-Stack Engineer: Line-Up Coding Exercise - David Okeke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadUser, {\n      userData: userData,\n      userId: userId,\n      dataLoaded: dataLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nLdtIy4p9KeZ5GmQGSF2fVdB05c=\", false, function () {\n  return [useParams];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadUser\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useParams","UserPage","getUser","LoadUser","props","dataLoaded","userId","userData","console","log","App","urlParams","setDataLoaded","setUserData","JSON","stringify","then","response"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/api_wrapper/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport UserPage from \"./components/UserPage\";\nimport {getUser} from \"./api/UserAPI\";\n\nfunction LoadUser(props) {\nconst dataLoaded = props.dataLoaded;\nconst userId = props.userId;\nconst userData = props.userData;\nconsole.log(\"[APP] [LU] USER DATA: \" + props.userData);\n  if (props.userId) {\n    return (\n      <div className=\"UserPage\">\n        {/*Load UserPage component once data has been retrieved and user id is present in url*/}\n        {dataLoaded && <UserPage userData={userData} userId={userId} />}\n      </div>\n    );\n  } else if (userData === 404) {\n    return (\n      <div className=\"UserPage\">User {userId} not found...</div>\n    );\n  } else {\n    return (\n      <div className=\"UserPage\">User ID not present in URL...</div>\n    );\n  }\n}\n\nfunction App() {\n  // Hook used to access path paramaters\n  const urlParams = useParams();\n  const userId = urlParams.userId;\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [userData, setUserData] = useState([]);\n  // Debug / Logging\n  console.log(\"URL PARAMS: \" + JSON.stringify(urlParams));\n  console.log(\"USER ID: \" + userId);\n\n  // Retrieve user information from API on component load\n  useEffect(() => {\n    console.log(\"[APP] LOADING USER DATA: \" + dataLoaded);\n    getUser(userId).then((response) => {\n      setUserData(response);\n      setDataLoaded(true);\n      console.log(\"USER DATA: \" + JSON.stringify(response));\n    });\n  }, []);\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <div>Full-Stack Engineer: Line-Up Coding Exercise - David Okeke</div>\n      </header>\n      <LoadUser userData={userData} userId={userId} dataLoaded={dataLoaded}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAAQC,OAAO,QAAO,eAAe;AAAC;AAEtC,SAASC,QAAQ,CAACC,KAAK,EAAE;EACzB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;EACnC,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;EAC/BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGL,KAAK,CAACG,QAAQ,CAAC;EACpD,IAAIH,KAAK,CAACE,MAAM,EAAE;IAChB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,UAEtBD,UAAU,iBAAI,QAAC,QAAQ;QAAC,QAAQ,EAAEE,QAAS;QAAC,MAAM,EAAED;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3D;EAEV,CAAC,MAAM,IAAIC,QAAQ,KAAK,GAAG,EAAE;IAC3B,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,oBAAOD,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB;EAE9D,CAAC,MAAM;IACL,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoC;EAEjE;AACF;AAAC,KArBQH,QAAQ;AAuBjB,SAASO,GAAG,GAAG;EAAA;EACb;EACA,MAAMC,SAAS,GAAGX,SAAS,EAAE;EAC7B,MAAMM,MAAM,GAAGK,SAAS,CAACL,MAAM;EAC/B,MAAM,CAACD,UAAU,EAAEO,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,QAAQ,EAAEM,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACAU,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGK,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAAC;EACvDH,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGH,MAAM,CAAC;;EAEjC;EACAP,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGJ,UAAU,CAAC;IACrDH,OAAO,CAACI,MAAM,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAK;MACjCJ,WAAW,CAACI,QAAQ,CAAC;MACrBL,aAAa,CAAC,IAAI,CAAC;MACnBJ,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGK,IAAI,CAACC,SAAS,CAACE,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAQ,SAAS,EAAC,YAAY;MAAA,uBAC5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqE;MAAA;MAAA;MAAA;IAAA,QAC9D,eACT,QAAC,QAAQ;MAAC,QAAQ,EAAEV,QAAS;MAAC,MAAM,EAAED,MAAO;MAAC,UAAU,EAAED;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEV;AAAC,GA5BQK,GAAG;EAAA,QAEQV,SAAS;AAAA;AAAA,MAFpBU,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}