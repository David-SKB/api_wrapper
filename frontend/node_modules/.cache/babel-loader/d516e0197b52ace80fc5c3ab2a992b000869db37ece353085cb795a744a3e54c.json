{"ast":null,"code":"import axios from 'axios';\nexport async function getUser(userId) {\n  console.log(\"[US] [GET] START\");\n  let user_data = await axios.get('http://localhost:8000/user', {\n    params: {\n      id: userId\n    }\n  }).then(response => response.data).catch(function (err) {\n    console.log(\"[US] [GET] ERROR: \" + err);\n    return err;\n  }).then(function () {\n    // always executed\n    console.log('[US] [GET] user_data DATA: ' + user_data);\n    console.log(\"[US] [GET] COMPLETE\");\n    return response;\n  });\n  return response;\n}","map":{"version":3,"names":["axios","getUser","userId","console","log","user_data","get","params","id","then","response","data","catch","err"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/api_wrapper/frontend/src/api/UserAPI.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport async function getUser(userId) {\r\n\r\n    console.log(\"[US] [GET] START\");\r\n    let user_data = await axios.get('http://localhost:8000/user', {\r\n        params: {\r\n            id: userId\r\n        }\r\n    }).then(response => response.data\r\n    ).catch(function(err) {\r\n       console.log(\"[US] [GET] ERROR: \" + err); \r\n       return err;\r\n    }).then(function () {\r\n        // always executed\r\n        console.log('[US] [GET] user_data DATA: ' + user_data);\r\n        console.log(\"[US] [GET] COMPLETE\");\r\n        return response;\r\n      });\r\n      return response; \r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,OAAO,CAACC,MAAM,EAAE;EAElCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,IAAIC,SAAS,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,4BAA4B,EAAE;IAC1DC,MAAM,EAAE;MACJC,EAAE,EAAEN;IACR;EACJ,CAAC,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAChC,CAACC,KAAK,CAAC,UAASC,GAAG,EAAE;IACnBV,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGS,GAAG,CAAC;IACvC,OAAOA,GAAG;EACb,CAAC,CAAC,CAACJ,IAAI,CAAC,YAAY;IAChB;IACAN,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGC,SAAS,CAAC;IACtDF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAOM,QAAQ;EACjB,CAAC,CAAC;EACF,OAAOA,QAAQ;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}