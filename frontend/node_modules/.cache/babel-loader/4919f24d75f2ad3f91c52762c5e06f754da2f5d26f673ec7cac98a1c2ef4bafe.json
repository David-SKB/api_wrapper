{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\api_wrapper\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport { getUser } from \"./api/UserAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Hook used to access path paramaters\n  const urlParams = useParams();\n  const userId = urlParams.userId;\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [userData, setUserData] = useState([]);\n  // Logging\n  console.log(\"URL PARAMS: \" + JSON.stringify(urlParams));\n  console.log(\"USER ID: \" + userId);\n\n  // Retrieve user information from API on component load\n  useEffect(() => {\n    console.log(\"[APP] LOADING USER DATA: \" + dataLoaded);\n    getUser(userId).then(response => {\n      setUserData(response);\n      setDataLoaded(true);\n      console.log(\"USER DATA: \" + JSON.stringify(response));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.avatar,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", userData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Email: \", userData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"First Name: \", userData.first_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Last Name: \", userData.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nLdtIy4p9KeZ5GmQGSF2fVdB05c=\", false, function () {\n  return [useParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","useParams","Main","getUser","App","urlParams","userId","dataLoaded","setDataLoaded","userData","setUserData","console","log","JSON","stringify","then","response","avatar","id","email","first_name","last_name"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/api_wrapper/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\nimport Main from \"./components/Main\"\nimport {getUser} from \"./api/UserAPI\";\n\nfunction App() {\n  // Hook used to access path paramaters\n  const urlParams = useParams();\n  const userId = urlParams.userId\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [userData, setUserData] = useState([]);\n  // Logging\n  console.log(\"URL PARAMS: \" + JSON.stringify(urlParams));\n  console.log(\"USER ID: \" + userId);\n\n\n\n  // Retrieve user information from API on component load\n  useEffect(() => {\n    console.log(\"[APP] LOADING USER DATA: \" + dataLoaded);\n    getUser(userId).then((response) => {\n      setUserData(response);\n      setDataLoaded(true);\n      console.log(\"USER DATA: \" + JSON.stringify(response));\n    });\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={userData.avatar} alt=\"logo\" />\n        <p>\n          <div>ID: {userData.id}</div>\n          <div>Email: {userData.email}</div>\n          <div>First Name: {userData.first_name}</div>\n          <div>Last Name: {userData.last_name}</div>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,OAAO,QAAO,eAAe;AAAC;AAEtC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAMC,SAAS,GAAGJ,SAAS,EAAE;EAC7B,MAAMK,MAAM,GAAGD,SAAS,CAACC,MAAM;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACAa,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACT,SAAS,CAAC,CAAC;EACvDM,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGN,MAAM,CAAC;;EAIjC;EACAP,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGL,UAAU,CAAC;IACrDJ,OAAO,CAACG,MAAM,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;MACjCN,WAAW,CAACM,QAAQ,CAAC;MACrBR,aAAa,CAAC,IAAI,CAAC;MACnBG,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGC,IAAI,CAACC,SAAS,CAACE,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAEP,QAAQ,CAACQ,MAAO;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACxC;QAAA,wBACE;UAAA,mBAAUR,QAAQ,CAACS,EAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAC5B;UAAA,sBAAaT,QAAQ,CAACU,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAClC;UAAA,2BAAkBV,QAAQ,CAACW,UAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAC5C;UAAA,0BAAiBX,QAAQ,CAACY,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GApCQjB,GAAG;EAAA,QAEQH,SAAS;AAAA;AAAA,KAFpBG,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}